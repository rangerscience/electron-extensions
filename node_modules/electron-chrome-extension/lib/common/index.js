"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.backgroundPageProcessFlag = '--background-page';
var Engine;
(function (Engine) {
    Engine["OnCreateRenderer"] = "cx-engine-create-renderer";
    Engine["OnExtensionLoaded"] = "cx-engine-extension-loaded";
    Engine["OnExtensionUnloaded"] = "cx-engine-extension-unloaded";
    Engine["GetExtension"] = "cx-engine-get-extension";
})(Engine = exports.Engine || (exports.Engine = {}));
var Protocol;
(function (Protocol) {
    Protocol["Extension"] = "chrome-extension:";
    Protocol["ExtensionDefault"] = "chrome-extension:";
    Protocol["Chrome"] = "chrome:";
})(Protocol = exports.Protocol || (exports.Protocol = {}));
var Channel;
(function (Channel) {
    Channel["Handler"] = "cx-handler";
    Channel["Event"] = "cx-event";
    Channel["Property"] = "cx-property";
})(Channel = exports.Channel || (exports.Channel = {}));
var Api;
(function (Api) {
    Api["Windows"] = "windows";
    Api["Tabs"] = "tabs";
    Api["Cookies"] = "cookies";
})(Api = exports.Api || (exports.Api = {}));
exports.scope = (channel, api) => [channel, api].join('-');
exports.eventScope = (api, eventName) => [api, eventName].join('.');
exports.extensionScope = (channel, api, extensionId) => [channel, api, extensionId].join('-');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbW9uL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRWEsUUFBQSx5QkFBeUIsR0FBRyxtQkFBbUIsQ0FBQztBQUU3RCxJQUFZLE1BS1g7QUFMRCxXQUFZLE1BQU07SUFDaEIsd0RBQThDLENBQUE7SUFDOUMsMERBQWdELENBQUE7SUFDaEQsOERBQW9ELENBQUE7SUFDcEQsa0RBQXdDLENBQUE7QUFDMUMsQ0FBQyxFQUxXLE1BQU0sR0FBTixjQUFNLEtBQU4sY0FBTSxRQUtqQjtBQUVELElBQVksUUFJWDtBQUpELFdBQVksUUFBUTtJQUNsQiwyQ0FBK0IsQ0FBQTtJQUMvQixrREFBc0MsQ0FBQTtJQUN0Qyw4QkFBa0IsQ0FBQTtBQUNwQixDQUFDLEVBSlcsUUFBUSxHQUFSLGdCQUFRLEtBQVIsZ0JBQVEsUUFJbkI7QUFFRCxJQUFZLE9BSVg7QUFKRCxXQUFZLE9BQU87SUFDakIsaUNBQXNCLENBQUE7SUFDdEIsNkJBQWtCLENBQUE7SUFDbEIsbUNBQXdCLENBQUE7QUFDMUIsQ0FBQyxFQUpXLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQUlsQjtBQUVELElBQVksR0FJWDtBQUpELFdBQVksR0FBRztJQUNiLDBCQUFtQixDQUFBO0lBQ25CLG9CQUFhLENBQUE7SUFDYiwwQkFBbUIsQ0FBQTtBQUNyQixDQUFDLEVBSlcsR0FBRyxHQUFILFdBQUcsS0FBSCxXQUFHLFFBSWQ7QUFFWSxRQUFBLEtBQUssR0FBRyxDQUFDLE9BQWdCLEVBQUUsR0FBUSxFQUFFLEVBQUUsQ0FDbEQsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRWQsUUFBQSxVQUFVLEdBQUcsQ0FBSSxHQUFRLEVBQUUsU0FBWSxFQUFFLEVBQUUsQ0FDdEQsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRWhCLFFBQUEsY0FBYyxHQUFHLENBQzVCLE9BQWdCLEVBQ2hCLEdBQVEsRUFDUixXQUE2QixFQUM3QixFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElFeHRlbnNpb24gfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGJhY2tncm91bmRQYWdlUHJvY2Vzc0ZsYWcgPSAnLS1iYWNrZ3JvdW5kLXBhZ2UnO1xuXG5leHBvcnQgZW51bSBFbmdpbmUge1xuICBPbkNyZWF0ZVJlbmRlcmVyID0gJ2N4LWVuZ2luZS1jcmVhdGUtcmVuZGVyZXInLFxuICBPbkV4dGVuc2lvbkxvYWRlZCA9ICdjeC1lbmdpbmUtZXh0ZW5zaW9uLWxvYWRlZCcsXG4gIE9uRXh0ZW5zaW9uVW5sb2FkZWQgPSAnY3gtZW5naW5lLWV4dGVuc2lvbi11bmxvYWRlZCcsXG4gIEdldEV4dGVuc2lvbiA9ICdjeC1lbmdpbmUtZ2V0LWV4dGVuc2lvbicsXG59XG5cbmV4cG9ydCBlbnVtIFByb3RvY29sIHtcbiAgRXh0ZW5zaW9uID0gJ2Nocm9tZS1leHRlbnNpb246JyxcbiAgRXh0ZW5zaW9uRGVmYXVsdCA9ICdjaHJvbWUtZXh0ZW5zaW9uOicsXG4gIENocm9tZSA9ICdjaHJvbWU6Jyxcbn1cblxuZXhwb3J0IGVudW0gQ2hhbm5lbCB7XG4gIEhhbmRsZXIgPSAnY3gtaGFuZGxlcicsXG4gIEV2ZW50ID0gJ2N4LWV2ZW50JyxcbiAgUHJvcGVydHkgPSAnY3gtcHJvcGVydHknLFxufVxuXG5leHBvcnQgZW51bSBBcGkge1xuICBXaW5kb3dzID0gJ3dpbmRvd3MnLFxuICBUYWJzID0gJ3RhYnMnLFxuICBDb29raWVzID0gJ2Nvb2tpZXMnLFxufVxuXG5leHBvcnQgY29uc3Qgc2NvcGUgPSAoY2hhbm5lbDogQ2hhbm5lbCwgYXBpOiBBcGkpID0+XG4gIFtjaGFubmVsLCBhcGldLmpvaW4oJy0nKTtcblxuZXhwb3J0IGNvbnN0IGV2ZW50U2NvcGUgPSA8RT4oYXBpOiBBcGksIGV2ZW50TmFtZTogRSkgPT5cbiAgW2FwaSwgZXZlbnROYW1lXS5qb2luKCcuJyk7XG5cbmV4cG9ydCBjb25zdCBleHRlbnNpb25TY29wZSA9IChcbiAgY2hhbm5lbDogQ2hhbm5lbCxcbiAgYXBpOiBBcGksXG4gIGV4dGVuc2lvbklkOiBJRXh0ZW5zaW9uWydpZCddXG4pID0+IFtjaGFubmVsLCBhcGksIGV4dGVuc2lvbklkXS5qb2luKCctJyk7XG4iXX0=