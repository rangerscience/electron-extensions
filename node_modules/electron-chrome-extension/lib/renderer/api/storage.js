const { rpc, RpcIpcManager } = require('electron-simple-rpc');
const { ipcSend, ipcReceive } = require('electron-simple-ipc');
const Event = require('./event');
class ChromeStorageAreaAPIClient {
    constructor(areaName, extensionId) {
        this.rpcScope = `chrome-storage-${areaName}-${extensionId}`;
    }
    get(keys, callback) {
        rpc(this.rpcScope, 'get')(keys)
            .then(callback);
    }
    set(items, callback) {
        rpc(this.rpcScope, 'set')(items).then(callback);
    }
    remove(keys, callback) {
        rpc(this.rpcScope, 'remove')(keys).then(callback);
    }
    clear(callback) {
        rpc(this.rpcScope, 'clear')().then(callback);
    }
}
module.exports = {
    setup: extensionId => {
        const changedEvent = new Event();
        ipcReceive(`chrome-storage-changed-${extensionId}`, payload => changedEvent.emit.apply(changedEvent, payload));
        return {
            sync: new ChromeStorageAreaAPIClient('sync', extensionId),
            local: new ChromeStorageAreaAPIClient('local', extensionId),
            onChanged: changedEvent,
        };
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yZW5kZXJlci9hcGkvc3RvcmFnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLEVBQUUsR0FBRyxFQUFFLGFBQWEsRUFBRSxHQUFHLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBQzlELE1BQU0sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLEdBQUcsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFDL0QsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRWpDLE1BQU0sMEJBQTBCO0lBQzlCLFlBQVksUUFBUSxFQUFFLFdBQVc7UUFDL0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxrQkFBa0IsUUFBUSxJQUFJLFdBQVcsRUFBRSxDQUFDO0lBQzlELENBQUM7SUFDRCxHQUFHLENBQUMsSUFBSSxFQUFFLFFBQVE7UUFDaEIsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDO2FBQzVCLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNwQixDQUFDO0lBQ0QsR0FBRyxDQUFDLEtBQUssRUFBRSxRQUFRO1FBQ2pCLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBQ0QsTUFBTSxDQUFDLElBQUksRUFBRSxRQUFRO1FBQ25CLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsS0FBSyxDQUFDLFFBQVE7UUFDWixHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHO0lBQ2YsS0FBSyxFQUFFLFdBQVcsQ0FBQyxFQUFFO1FBRW5CLE1BQU0sWUFBWSxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7UUFDakMsVUFBVSxDQUFDLDBCQUEwQixXQUFXLEVBQUUsRUFDaEQsT0FBTyxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLENBQzFELENBQUE7UUFFRCxPQUFPO1lBQ0wsSUFBSSxFQUFFLElBQUksMEJBQTBCLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQztZQUN6RCxLQUFLLEVBQUUsSUFBSSwwQkFBMEIsQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDO1lBQzNELFNBQVMsRUFBRSxZQUFZO1NBQ3hCLENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgcnBjLCBScGNJcGNNYW5hZ2VyIH0gPSByZXF1aXJlKCdlbGVjdHJvbi1zaW1wbGUtcnBjJyk7XG5jb25zdCB7IGlwY1NlbmQsIGlwY1JlY2VpdmUgfSA9IHJlcXVpcmUoJ2VsZWN0cm9uLXNpbXBsZS1pcGMnKTtcbmNvbnN0IEV2ZW50ID0gcmVxdWlyZSgnLi9ldmVudCcpO1xuXG5jbGFzcyBDaHJvbWVTdG9yYWdlQXJlYUFQSUNsaWVudCB7XG4gIGNvbnN0cnVjdG9yKGFyZWFOYW1lLCBleHRlbnNpb25JZCkge1xuICAgIHRoaXMucnBjU2NvcGUgPSBgY2hyb21lLXN0b3JhZ2UtJHthcmVhTmFtZX0tJHtleHRlbnNpb25JZH1gO1xuICB9XG4gIGdldChrZXlzLCBjYWxsYmFjaykge1xuICAgIHJwYyh0aGlzLnJwY1Njb3BlLCAnZ2V0Jykoa2V5cylcbiAgICAgIC50aGVuKGNhbGxiYWNrKTtcbiAgfVxuICBzZXQoaXRlbXMsIGNhbGxiYWNrKSB7XG4gICAgcnBjKHRoaXMucnBjU2NvcGUsICdzZXQnKShpdGVtcykudGhlbihjYWxsYmFjayk7XG4gIH1cbiAgcmVtb3ZlKGtleXMsIGNhbGxiYWNrKSB7XG4gICAgcnBjKHRoaXMucnBjU2NvcGUsICdyZW1vdmUnKShrZXlzKS50aGVuKGNhbGxiYWNrKTtcbiAgfVxuXG4gIGNsZWFyKGNhbGxiYWNrKSB7XG4gICAgcnBjKHRoaXMucnBjU2NvcGUsICdjbGVhcicpKCkudGhlbihjYWxsYmFjayk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldHVwOiBleHRlbnNpb25JZCA9PiB7XG5cbiAgICBjb25zdCBjaGFuZ2VkRXZlbnQgPSBuZXcgRXZlbnQoKTtcbiAgICBpcGNSZWNlaXZlKGBjaHJvbWUtc3RvcmFnZS1jaGFuZ2VkLSR7ZXh0ZW5zaW9uSWR9YCxcbiAgICAgIHBheWxvYWQgPT4gY2hhbmdlZEV2ZW50LmVtaXQuYXBwbHkoY2hhbmdlZEV2ZW50LCBwYXlsb2FkKVxuICAgIClcblxuICAgIHJldHVybiB7XG4gICAgICBzeW5jOiBuZXcgQ2hyb21lU3RvcmFnZUFyZWFBUElDbGllbnQoJ3N5bmMnLCBleHRlbnNpb25JZCksXG4gICAgICBsb2NhbDogbmV3IENocm9tZVN0b3JhZ2VBcmVhQVBJQ2xpZW50KCdsb2NhbCcsIGV4dGVuc2lvbklkKSxcbiAgICAgIG9uQ2hhbmdlZDogY2hhbmdlZEV2ZW50LFxuICAgIH07XG4gIH1cbn1cbiJdfQ==